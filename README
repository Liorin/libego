               Library of Effective GO routines

This is a Library of Effective GO routines (EGO library / libEGO), a high performance 
implementation of Go rules and most popular algorithms used in computer Go. 
This is also fully functional GTP Go engine.

Newest version can be found using git repository:
git clone git://github.com/lukaszlew/libego.git  

                         Copyright

All files Copyright 2006 and onwards ≈Åukasz Lew 

All files in this package are under General Public License, 
which may be found in the file COPYING.

                       Installation

Just untar (tar zxfv libego*.tgz), and make.
./ego_opt runs GTP engine, which will first run commands from automagic.gtp.
For other commands just type "help".

If something goes wrong, try make ego_debug; ./ego_debug.

                         Library  

If You want to develop a Go program, then first take a look at playout.cpp
where you can find an effective procedure for Monte-Carlo playouts. 

                          Thanks              

My girlfriend for her endless support and patience.
Benjamin Tauber for many hours of extreme programming.
Jakub Pawlewicz for the idea of pseudo-liberties and find-union algorithms.
Dave Hillis for the idea of mercy rule.
Markus Enzenberger for his computer go bibliography and GoGui.
Don Dailey for setting up CGOS server.
And last but not least, a whole computer Go community for a 
stimulating mixture of cooperation and competition.

                          Contact

Lukasz Lew <lukasz.lew@gmail.com>
